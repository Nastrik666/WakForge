(function(){"use strict";importScripts("https://cdn.jsdelivr.net/pyodide/v0.24.1/full/pyodide.js");let t=null,o=null,s=null,n=null,r=null,i=null;const c=async()=>{o=await loadPyodide(),await o.loadPackage("micropip");const e=o.pyimport("micropip");console.log("Setting up the AutoBuild package loaded."),await e.install("wakautosolver"),console.log("AutoBuild package installed."),s=o.pyimport("wakautosolver"),console.log("AutoBuild package loaded."),postMessage("workerReady")},u=async()=>{var e;await g(n),(e=t==null?void 0:t[0])!=null&&e.length?p():postMessage(t[1])},g=async e=>{let l={lv:e.targetLevel,ap:e.targetApAmount,mp:e.targetMpAmount,wp:e.targetWpAmount,ra:e.targetRangeAmount,num_mastery:e.targetNumElements,dist:e.distanceMastery,melee:e.meleeMastery,zerk:e.berserkMastery,rear:e.rearMastery,heal:e.healingMastery,hard_cap_depth:7,bcrit:20};console.log("Python Params (useful for debugging if you need them)",l);let a=s.Config.callKwargs(l);t=s.solve_config(a)},p=()=>{let e=t[0],l=[];r.forEach(a=>{e.includes(a.id)&&l.push(a)}),l.sort((a,d)=>i.indexOf(a.type.validSlots[0])-i.indexOf(d.type.validSlots[0])),postMessage({items:l})};c(),onmessage=async e=>{n=e.data.params,r=e.data.itemData,i=e.data.ITEM_SLOT_SORT_ORDER,u()}})();
