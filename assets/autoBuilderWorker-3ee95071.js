(function(){"use strict";importScripts("https://cdn.jsdelivr.net/pyodide/v0.24.1/full/pyodide.js");let t=null,l=null,s=null,o=null,i=null,n=null;const d=async()=>{l=await loadPyodide(),await l.loadPackage("micropip");const e=l.pyimport("micropip");console.log("Installing msgspec"),await e.install("https://cdn.jsdelivr.net/gh/mikeshardmind/wakfu-utils@d4d24e1f631b5cf99ee1d9a7ee18bb8bd954fe9c/msgspec-0.18.4-cp311-cp311-emscripten_3_1_45_wasm32.whl"),console.log("Setting up the AutoBuild package loaded."),await e.install("wakautosolver"),console.log("AutoBuild package installed."),s=l.pyimport("wakautosolver.versioned_entrypoints"),console.log("AutoBuild package loaded."),postMessage("workerReady")},g=async()=>{var e;await h(o),(e=t==null?void 0:t[0])!=null&&e.length?m():postMessage(t[1])},h=async e=>{console.log(e);let a={ap:e.currentCharacter.actionPoints,mp:e.currentCharacter.movementPoints,wp:e.currentCharacter.stats.range,ra:e.currentCharacter.wakfuPoints,crit:e.currentCharacter.stats.criticalHit,crit_mastery:e.currentCharacter.masteries.critical,elemental_mastery:null,one_element_mastery:null,two_element_mastery:null,three_element_mastery:null,distance_mastery:e.currentCharacter.masteries.distance,rear_mastery:e.currentCharacter.masteries.rear,heal_mastery:e.currentCharacter.masteries.healing,beserk_mastery:e.currentCharacter.masteries.berserk,melee_mastery:e.currentCharacter.masteries.melee,control:e.currentCharacter.stats.control,block:e.currentCharacter.stats.block,heals_performed:e.currentCharacter.stats.healsPerformed,lock:e.currentCharacter.stats.lock,dodge:e.currentCharacter.stats.dodge},r={ap:e.targetStats.actionPoints,mp:e.targetStats.movementPoints,ra:e.targetStats.range,wp:e.targetStats.wakfuPoints},c=s.Stats.callKwargs(a),y=s.SetMinimums.callKwargs(r),u={lv:e.targetLevel,stats:c,target_stats:y,equipped_items:e.currentItemIds,num_mastery:e.targetNumElements,allowed_rarities:e.selectedRarityIds,dist:e.distanceMastery,melee:e.meleeMastery,heal:e.healingMastery,zerk:e.berserkMastery,rear:e.rearMastery,dry_run:!1};console.log("Python Params (useful for debugging if you need them)",u),t=s.partial_solve_v1.callKwargs(u)},m=()=>{let e=t[0],a=[];i.forEach(r=>{e.includes(r.id)&&a.push(r)}),a.sort((r,c)=>n.indexOf(r.type.validSlots[0])-n.indexOf(c.type.validSlots[0])),postMessage({items:a})};d(),onmessage=async e=>{o=e.data.params,i=e.data.itemData,n=e.data.ITEM_SLOT_SORT_ORDER,g()}})();
